#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/conductor'

# raise 'No input on STDIN' unless Conductor.stdin

include Conductor

config = Config.new

def conduct(tracks, res = nil, condition = nil)
  tracks.each do |track|
    cond = Condition.new(track[:condition])

    next unless cond.true?

    if track[:tracks]
      ts = track[:tracks].symbolize_keys

      res, condition = conduct(ts, res, condition)

      next if res.nil?
    end

    condition = condition.nil? ? track[:condition] : "#{track[:condition]} > #{condition}"

    if track[:script]
      script = Script.new(track[:script])

      res = script.run
    elsif track[:command]
      command = Command.new(track[:command])

      res = command.run
    end

    break
  end

  [res, condition]
end

tracks = config.tracks
res, condition = conduct(tracks)

if res.nil?
  $stderr.puts('No conditions satisfied')
  puts 'NOCUSTOM'
else
  $stderr.puts("Met condition: #{condition}")
  puts res
end

